# Pipeline for building and deploying the application
# See: https://aka.ms/yaml

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: build
    displayName: Build Web Application
    steps:
      - task: Gradle@2
        displayName: Build API
        inputs:
          gradleWrapperFile: 'lakieditori-api/gradlew'
          workingDirectory: 'lakieditori-api'
          tasks: 'build publishToMavenLocal'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          sonarQubeRunAnalysis: false
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'JaCoCo'
          summaryFileLocation: '$(Build.SourcesDirectory)/build/reports/jacoco/test/jacocoTestReport.xml'
          reportDirectory: '$(Build.SourcesDirectory)/build/reports/jacoco/test/html'
      - task: Maven@3
        displayName: Build UI
        inputs:
          mavenPomFile: 'lakieditori-ui/pom.xml'
          goals: 'install'
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
      - task: Maven@3
        displayName: Build JAR
        inputs:
          mavenPomFile: 'lakieditori-jar/pom.xml'
          goals: 'package'
          publishJUnitResults: false
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
      - task: CopyFiles@2
        displayName: Copy JAR to Staging
        inputs:
          sourceFolder: 'lakieditori-jar/target'
          contents: '*.jar'
          targetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        displayName: Publish JAR
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'buildOutput'

  - deployment: deploy
    displayName: Deploy Web Application
    dependsOn: build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    environment:
      name: dev
    strategy:
      runOnce:
        deploy:
          steps:
            - download: current
              displayName: Download JAR
              artifact: buildOutput
            - task: AzureWebApp@1
              displayName: Deploy JAR
              inputs:
                azureSubscription: 'AzureLakieditoriServiceConnection'
                appType: 'webAppLinux'
                appName: 'lakieditori3'
                package: '$(Pipeline.Workspace)/**/*.jar'
                runtimeStack: 'JAVA|8-jre8'
